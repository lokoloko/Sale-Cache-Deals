// src/components/ui/alert.tsx
// This is a reusable Alert component, likely adapted from ShadCN UI.
// It's used for displaying important messages, warnings, or errors.
// It uses class-variance-authority (cva) for different alert styles (e.g., default, destructive).

import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority" // For variant-driven class names.

import { cn } from "@/lib/utils" // Utility for merging Tailwind classes.

// --- Alert Variants Definition ---
// `cva` defines base styles and variants for the alert component.
// 🔍 These variants control the visual appearance of the alert (e.g., background color, text color).
const alertVariants = cva(
  // Base classes applied to all alerts.
  "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground",
  {
    variants: {
      // `variant` defines the alert's style (e.g., "default" or "destructive" for errors).
      variant: {
        default: "bg-background text-foreground", // Standard alert style.
        destructive:
          "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive", // Error/warning style.
      },
    },
    // Default variant if not specified.
    defaultVariants: {
      variant: "default",
    },
  }
)

// --- Alert Component (Root) ---
/**
 * @component Alert
 * @description The main container for an alert message.
 * Supports different variants like 'default' and 'destructive'.
 * This is a reusable UI pattern for notifications.
 * @param {React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>} props - Props for the Alert.
 */
const Alert = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>
>(({ className, variant, ...props }, ref) => (
  <div
    ref={ref}
    role="alert" // Important for accessibility.
    // Apply Tailwind classes generated by `alertVariants` and any custom `className`.
    className={cn(alertVariants({ variant }), className)}
    {...props}
  />
))
Alert.displayName = "Alert" // For better debugging.

// --- AlertTitle Component ---
/**
 * @component AlertTitle
 * @description A component for rendering the title of an alert message.
 */
const AlertTitle = React.forwardRef<
  HTMLParagraphElement, // Note: This is an h5-like element, but rendered as <p> or <h5>.
  React.HTMLAttributes<HTMLHeadingElement> // Props for an HTML heading element.
>(({ className, ...props }, ref) => (
  <h5 // Using <h5> for semantic structure, though styling is controlled by classes.
    ref={ref}
    // Tailwind classes for alert title styling.
    className={cn("mb-1 font-medium leading-none tracking-tight", className)}
    {...props}
  />
))
AlertTitle.displayName = "AlertTitle"

// --- AlertDescription Component ---
/**
 * @component AlertDescription
 * @description A component for rendering the main descriptive text of an alert message.
 */
const AlertDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
  <div // Using <div> to allow complex children, though often it's just text.
    ref={ref}
    // Tailwind classes for alert description styling.
    className={cn("text-sm [&_p]:leading-relaxed", className)}
    {...props}
  />
))
AlertDescription.displayName = "AlertDescription"

export { Alert, AlertTitle, AlertDescription }
